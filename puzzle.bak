#include <bangtal>
#include <time.h>
#include <stdlib.h>
using namespace bangtal;

class Piece {
public:
	std::string imgAd;
	int pos;
	ObjectPtr piece;

	Piece(std::string img, int n, ScenePtr scene, int x, int y) : imgAd(img), pos(n){
		piece = Object::create(img, scene, x, y);
	};

	void setImage(std::string new_image)
	{
		piece->setImage(new_image);
	}

	void clickMove(Piece& piece, Piece& empty_piece, const int piece_num, int& empty_num)
	{
		piece.piece->setOnMouseCallback([&](ObjectPtr object, int x, int y, MouseAction action)->bool {
			if (empty_num == piece_num + one_line || empty_num == piece_num - one_line || empty_num % one_line == piece_num % one_line - 1 || empty_num % one_line == piece_num % one_line + 1)
			{
				ImgSwap(piece, empty_piece);
				empty_num = piece_num;
			}

			return true;
			});
	}
};

const auto one_line = 4;
const auto num_piece = one_line * one_line;
auto empty_piece = num_piece - 1;
const auto piece_size = 150;
const auto piece1_posX = 300;
const auto piece1_posY = 470;

void ImgSwap(Piece& piece, Piece& new_piece)
{
	std::string img_temp;
	int pos_temp;

	img_temp = piece.imgAd;
	piece.imgAd = new_piece.imgAd;
	new_piece.imgAd = img_temp;

	piece.setImage(piece.imgAd);
	new_piece.setImage(new_piece.imgAd);

	pos_temp = piece.pos;
	piece.pos = new_piece.pos;
	new_piece.pos = pos_temp;
}


int main()
{
	setGameOption(GameOption::GAME_OPTION_INVENTORY_BUTTON, false);
	setGameOption(GameOption::GAME_OPTION_MESSAGE_BOX_BUTTON, false);

	auto scene = Scene::create("", "Images/원본.png");

	Piece piece[num_piece] = {
		{"Images/1.png", 0, scene, piece1_posX, piece1_posY},
		{"Images/2.png", 1, scene, piece1_posX + piece_size, piece1_posY},
		{"Images/3.png", 2, scene, piece1_posX + piece_size * 2, piece1_posY},
		{"Images/4.png", 3, scene, piece1_posX + piece_size * 3, piece1_posY},
		{"Images/5.png", 4, scene, piece1_posX, piece1_posY - piece_size},
		{"Images/6.png", 5, scene, piece1_posX + piece_size, piece1_posY - piece_size},
		{"Images/7.png", 6, scene, piece1_posX + piece_size * 2, piece1_posY - piece_size},
		{"Images/8.png", 7, scene, piece1_posX + piece_size * 3, piece1_posY - piece_size},
		{"Images/9.png", 8, scene, piece1_posX, piece1_posY - piece_size * 2},
		{"Images/10.png", 9, scene, piece1_posX + piece_size, piece1_posY - piece_size * 2},
		{"Images/11.png", 10, scene, piece1_posX + piece_size * 2, piece1_posY - piece_size * 2},
		{"Images/12.png", 11, scene, piece1_posX + piece_size * 3, piece1_posY - piece_size * 2},
		{"Images/13.png", 12, scene, piece1_posX, piece1_posY - piece_size * 3},
		{"Images/14.png", 13, scene, piece1_posX + piece_size, piece1_posY - piece_size * 3},
		{"Images/15.png", 14, scene, piece1_posX + piece_size * 2, piece1_posY - piece_size * 3},
		{"\0", 15, scene, piece1_posX + piece_size * 3, piece1_posY - piece_size * 3},
	};

	auto start = Object::create("Images/start.png", scene, 550, 100);
	start->setScale(1.5f);
	start->setOnMouseCallback([&](ObjectPtr object, int x, int y, MouseAction action)->bool {
		object->hide();
		scene->setImage("Images/배경.png");

		srand((unsigned int)time(NULL));
		int i;
		int rn;

		for (i = 0; i < 100; i++)
		{
			rn = rand() % 4;

			if (rn == 0)
			{
				if (empty_piece >= one_line)
				{
					ImgSwap(piece[empty_piece], piece[empty_piece - one_line]);
					empty_piece -= one_line;
				}
				else
					continue;
			}

			else if (rn == 1)
			{
				if (empty_piece < num_piece - one_line)
				{
					ImgSwap(piece[empty_piece], piece[empty_piece + one_line]);
					empty_piece += one_line;
				}
				else
					continue;
			}

			else if (rn == 2)
			{
				if (empty_piece % one_line > 0)
				{
					ImgSwap(piece[empty_piece], piece[empty_piece - 1]);
					empty_piece -= 1;
				}
				else
					continue;
			}

			else if (rn == 3)
			{
				if (empty_piece % one_line < one_line - 1)
				{
					ImgSwap(piece[empty_piece], piece[empty_piece + 1]);
					empty_piece += 1;
				}
				else
					continue;
			}
		}

		return true;
		});

	int i;
	for (i = 0; i < num_piece; i++)
	{
		piece[i].clickMove(piece[i], piece[empty_piece], i, empty_piece);
	}

	startGame(scene);

	return 0;
}
